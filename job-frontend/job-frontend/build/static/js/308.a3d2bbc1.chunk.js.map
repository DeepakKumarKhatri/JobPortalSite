{"version":3,"file":"static/js/308.a3d2bbc1.chunk.js","mappings":"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","sources":["components/dashboard/Tables/JobItem.jsx","components/dashboard/Counters/AdminCard.jsx","components/dashboard/Counters/AdminCards.jsx","webpack://project/./src/components/dashboard/Tables/UserTable.module.css?46c8","components/dashboard/Tables/JobsTable.jsx","components/dashboard/Tables/UserItem.jsx","components/dashboard/Tables/UserTable.jsx","pages/AdminPages/AdminDashboardPage.jsx","util/dateFormatter.js","../node_modules/react-bootstrap/esm/Table.js","webpack://project/./src/components/dashboard/Counters/AdminCard.module.css?9f3c","webpack://project/./src/components/dashboard/Tables/UserItem.module.css?c15a"],"sourcesContent":["import classes from \"./UserItem.module.css\";\r\nimport dateFormatter from \"../../../util/dateFormatter\";\r\n\r\nconst JobItem = (props) => {\r\n  let formattedCreatedAt = dateFormatter(props.jobInfo.createdAt);\r\n  let formattedUpdatedAt = dateFormatter(props.jobInfo.updatedAt);\r\n  return (\r\n    <tr className={classes.row}>\r\n      {/* <td>{props.jobInfo.jobId}</td> */}\r\n      <td>{props.jobInfo.title}</td>\r\n      <td>{props.jobInfo.category}</td>\r\n      <td>{formattedCreatedAt}</td>\r\n      <td>{formattedUpdatedAt}</td>\r\n    </tr>\r\n  );\r\n};\r\n\r\nexport default JobItem;\r\n","import classes from \"./AdminCard.module.css\";\r\n\r\nconst AdminCard = ({ color, ...props }) => {\r\n  let logoBG = { backgroundColor: color };\r\n  return (\r\n    <div className={classes.card}>\r\n      <div className={classes[\"logo-line\"]}>\r\n        <div className={classes.logo} style={logoBG}>\r\n          {/* <img src={props.logo} alt=\"Total Jobs\" /> */}\r\n          <span>{props.logo}</span>\r\n        </div>\r\n        <div className={classes[\"card-heading\"]}>\r\n          <span className={classes.heading}>{props.heading}</span>\r\n          <h4>{props.statistics}</h4>\r\n        </div>\r\n      </div>\r\n      <hr />\r\n      <div className={classes.caption}>\r\n        <p>{props.caption}</p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AdminCard;\r\n","import AdminCard from \"./AdminCard\";\r\n\r\nimport React from \"react\";\r\nimport { Col, Row } from \"react-bootstrap\";\r\n\r\n// import userData from \"../../../store/userData.json\";\r\n// import jobData from \"../../../store/jobData.json\";\r\n\r\nconst AdminCards = ({ stats, ...props }) => {\r\n  return (\r\n    <Row>\r\n      <Col>\r\n        <AdminCard\r\n          logo={<i className=\"bi bi-briefcase-fill\"></i>}\r\n          heading={\"Total Jobs\"}\r\n          statistics={stats.jobCount}\r\n          caption={\"\"}\r\n        />\r\n      </Col>\r\n      <Col>\r\n        <AdminCard\r\n          color=\"#fa3535\"\r\n          logo={<i className=\"bi bi-file-earmark-person-fill\"></i>}\r\n          heading={\"Total Applicants\"}\r\n          statistics={stats.applicantCount}\r\n          caption={\"\"}\r\n        />\r\n      </Col>\r\n      <Col>\r\n        <AdminCard\r\n          color=\"#00b359\"\r\n          logo={<i className=\"bi bi-person-check-fill\"></i>}\r\n          heading={\"Total Job Providers\"}\r\n          statistics={stats.providerCount}\r\n          caption={\"\"}\r\n        />\r\n      </Col>\r\n      <Col>\r\n        <AdminCard\r\n          color=\"#ff5500\"\r\n          logo={<i className=\"bi bi-person-circle\"></i>}\r\n          heading={\"Total Users\"}\r\n          statistics={stats.seekerCount}\r\n          caption={\"\"}\r\n        />\r\n      </Col>\r\n    </Row>\r\n  );\r\n};\r\n\r\nexport default AdminCards;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"rowStyle\":\"UserTable_rowStyle__Ay3e+\",\"span\":\"UserTable_span__5Y87y\",\"button\":\"UserTable_button__8Kr9V\",\"tableHeader\":\"UserTable_tableHeader__Nyqzf\",\"tableBox\":\"UserTable_tableBox__ydGJK\"};","import React from \"react\";\r\nimport classes from \"./UserTable.module.css\";\r\nimport { Table, Row, Col, Button } from \"react-bootstrap\";\r\nimport JobItem from \"./JobItem\";\r\n// import jobData from \"../../../store/jobData.json\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nconst JobsTable = (props) => {\r\n  const navigate = useNavigate();\r\n  const recentJobsHandler = () => {\r\n    navigate(\"/manage-jobs\");\r\n  };\r\n  return (\r\n    <React.Fragment>\r\n      <Row className={classes.rowStyle}>\r\n        <Col>\r\n          <span className={`${classes.span} float-start`}>Recent Jobs</span>\r\n        </Col>\r\n        <Col>\r\n          <Button\r\n            className={`${classes.button} float-end`}\r\n            onClick={recentJobsHandler}\r\n          >\r\n            View All\r\n          </Button>\r\n        </Col>\r\n      </Row>\r\n      <div className={classes.tableBox}>\r\n        <Table striped hover>\r\n          <thead>\r\n            <tr className={classes.tableHeader}>\r\n              {/* <th>JobId</th> */}\r\n              <th>Title</th>\r\n              <th>Category</th>\r\n              <th>First Created</th>\r\n              <th>Last Modified</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {props.jobData.map((job) => (\r\n              <JobItem jobInfo={job} key={job._id} />\r\n            ))}\r\n          </tbody>\r\n        </Table>\r\n        {props.jobData.length === 0 && (\r\n          <p className=\"text-center fw-bold\">No data</p>\r\n        )}\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default JobsTable;\r\n","import dateFormatter from \"../../../util/dateFormatter\";\r\nimport classes from \"./UserItem.module.css\";\r\nconst UserItem = (props) => {\r\n  let formattedCreatedAt = dateFormatter(props.userInfo.createdAt);\r\n  let formattedUpdatedAt = dateFormatter(props.userInfo.updatedAt);\r\n  return (\r\n    <tr className={classes.row}>\r\n      {/* <td>{props.userInfo.id}</td> */}\r\n      <td>{props.userInfo.name}</td>\r\n      <td>{props.userInfo.email}</td>\r\n      <td>{formattedCreatedAt}</td>\r\n      <td>{formattedUpdatedAt}</td>\r\n    </tr>\r\n  );\r\n};\r\n\r\nexport default UserItem;\r\n","import React from \"react\";\r\nimport classes from \"./UserTable.module.css\";\r\nimport { Table, Row, Col, Button } from \"react-bootstrap\";\r\nimport UserItem from \"./UserItem\";\r\n// import usersData from \"../../../store/userData.json\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nconst UserTable = (props) => {\r\n  const navigate = useNavigate();\r\n  const recentUsersHandler = () => {\r\n    navigate(\"/manage-users\");\r\n  };\r\n  return (\r\n    <React.Fragment>\r\n      <Row className={classes.rowStyle}>\r\n        <Col>\r\n          <span className={`${classes.span} float-start`}>Recent Users</span>\r\n        </Col>\r\n        <Col>\r\n          <Button\r\n            variant=\"primary\"\r\n            className={`${classes.button} float-end`}\r\n            onClick={recentUsersHandler}\r\n          >\r\n            View All\r\n          </Button>\r\n        </Col>\r\n      </Row>\r\n      <div className={classes.tableBox}>\r\n        <Table striped hover>\r\n          <thead>\r\n            <tr className={classes.tableHeader}>\r\n              {/* <th>UserId</th> */}\r\n              <th>Name</th>\r\n              <th>Email</th>\r\n              <th>First Created</th>\r\n              <th>Last Modified</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {props.usersData.map((user) => (\r\n              <UserItem userInfo={user} key={user._id} />\r\n            ))}\r\n          </tbody>\r\n        </Table>\r\n        {props.usersData.length === 0 && (\r\n          <p className=\"text-center fw-bold\">No data</p>\r\n        )}\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default UserTable;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport AdminCards from \"../../components/dashboard/Counters/AdminCards\";\r\n// import AdminCounters from \"../components/dashboard/Counters/AdminCounters\";\r\nimport JobsTable from \"../../components/dashboard/Tables/JobsTable\";\r\nimport UserTable from \"../../components/dashboard/Tables/UserTable\";\r\nimport axios from \"axios\";\r\nimport Config from \"../../config/Config.json\";\r\nimport SpinnerComponent from \"../../components/UI/SpinnerComponent\";\r\n\r\nconst AdminDashboardPage = () => {\r\n  const [userData, setUserData] = useState([]);\r\n  const [jobData, setJobData] = useState([]);\r\n  const [stats, setStats] = useState({\r\n    jobCount: 0,\r\n    providerCount: 0,\r\n    applicantCount: 0,\r\n    seekerCount: 0,\r\n  });\r\n  const [showSpinner, setShowSpinner] = useState(false);\r\n  const token = localStorage.getItem(\"token\");\r\n\r\n  useEffect(() => {\r\n    document.title = Config.TITLE.DASHBOARD;\r\n    setShowSpinner(true);\r\n\r\n    axios\r\n      .get(`${Config.SERVER_URL + \"admin/dashboard-stats\"}`, {\r\n        headers: {\r\n          Authorization: \"Bearer \" + token,\r\n        },\r\n      })\r\n      .then((res) => {\r\n        setShowSpinner(false);\r\n        setStats(res.data.stats);\r\n      });\r\n    axios\r\n      .get(`${Config.SERVER_URL + \"admin/dashboard-recents\"}`, {\r\n        headers: {\r\n          Authorization: \"Bearer \" + token,\r\n        },\r\n      })\r\n      .then((res) => {\r\n        // console.log(res.data);\r\n        setShowSpinner(false);\r\n        setUserData(res.data.recentUsers);\r\n        setJobData(res.data.recentJobs);\r\n      });\r\n  }, [token]);\r\n  return (\r\n    <React.Fragment>\r\n      <AdminCards stats={stats} />\r\n      {showSpinner && <SpinnerComponent />}\r\n      {!showSpinner && (\r\n        <>\r\n          <UserTable usersData={userData} />\r\n          <JobsTable jobData={jobData} />\r\n        </>\r\n      )}\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default AdminDashboardPage;\r\n","const dateFormatter = (givenDate) => {\r\n  const date = new Date(givenDate);\r\n\r\n  return date.toLocaleString(\"en-gb\", {\r\n    day: \"numeric\",\r\n    month: \"numeric\",\r\n    year: \"numeric\",\r\n    hour: \"2-digit\",\r\n    minute: \"2-digit\",\r\n    second: \"2-digit\",\r\n  });\r\n};\r\n\r\nexport default dateFormatter;\r\n","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst Table = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  striped,\n  bordered,\n  borderless,\n  hover,\n  size,\n  variant,\n  responsive,\n  ...props\n}, ref) => {\n  const decoratedBsPrefix = useBootstrapPrefix(bsPrefix, 'table');\n  const classes = classNames(className, decoratedBsPrefix, variant && `${decoratedBsPrefix}-${variant}`, size && `${decoratedBsPrefix}-${size}`, striped && `${decoratedBsPrefix}-striped`, bordered && `${decoratedBsPrefix}-bordered`, borderless && `${decoratedBsPrefix}-borderless`, hover && `${decoratedBsPrefix}-hover`);\n\n  const table = /*#__PURE__*/_jsx(\"table\", { ...props,\n    className: classes,\n    ref: ref\n  });\n\n  if (responsive) {\n    let responsiveClass = `${decoratedBsPrefix}-responsive`;\n\n    if (typeof responsive === 'string') {\n      responsiveClass = `${responsiveClass}-${responsive}`;\n    }\n\n    return /*#__PURE__*/_jsx(\"div\", {\n      className: responsiveClass,\n      children: table\n    });\n  }\n\n  return table;\n});\nexport default Table;","// extracted by mini-css-extract-plugin\nexport default {\"card\":\"AdminCard_card__L52VU\",\"logo-line\":\"AdminCard_logo-line__YGyVp\",\"logo\":\"AdminCard_logo__kCZsh\",\"card-heading\":\"AdminCard_card-heading__3+MZd\",\"heading\":\"AdminCard_heading__FO0li\",\"caption\":\"AdminCard_caption__MiVKE\"};","// extracted by mini-css-extract-plugin\nexport default {\"row\":\"UserItem_row__5i2CT\"};"],"names":["props","formattedCreatedAt","dateFormatter","jobInfo","createdAt","formattedUpdatedAt","updatedAt","_jsxs","className","classes","row","children","_jsx","title","category","_ref","color","logoBG","backgroundColor","card","logo","style","heading","statistics","caption","stats","Row","Col","AdminCard","jobCount","applicantCount","providerCount","seekerCount","navigate","useNavigate","React","concat","Button","onClick","recentJobsHandler","Table","striped","hover","jobData","map","job","JobItem","_id","length","userInfo","name","email","variant","recentUsersHandler","usersData","user","UserItem","AdminDashboardPage","userData","setUserData","useState","setJobData","setStats","showSpinner","setShowSpinner","token","localStorage","getItem","useEffect","document","Config","axios","get","headers","Authorization","then","res","data","recentUsers","recentJobs","AdminCards","SpinnerComponent","_Fragment","UserTable","JobsTable","givenDate","Date","toLocaleString","day","month","year","hour","minute","second","ref","bsPrefix","bordered","borderless","size","responsive","decoratedBsPrefix","useBootstrapPrefix","classNames","table","responsiveClass"],"sourceRoot":""}